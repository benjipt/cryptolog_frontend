{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/Transactions.jsx\";\nimport React, { Component } from 'react';\nimport Moment from 'react-moment';\nimport EditForm from './EditForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3003';\nexport default class Transactions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editTransaction: false,\n      transaction: {}\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleEdit(event) {\n    fetch(`${baseURL}/transactions/${event.target.id}`).then(data => {\n      return data.json();\n    }, err => console.log(err)).then(parsedData => this.setState({\n      editTransaction: !this.state.editTransaction,\n      transaction: parsedData\n    }), err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Coin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price per Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exchange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.props.transactions.map(transaction => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"MM/DD/YYYY\",\n                  children: transaction.transactionDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.transactionType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.coin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.quantity.$numberDecimal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.perUnitPrice.$numberDecimal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.exchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.handleEdit,\n                  id: transaction._id,\n                  className: \"btn btn-outline-secondary btn-sm\",\n                  children: \"EDIT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: transaction._id,\n                  className: \"btn btn-outline-danger btn-sm\",\n                  children: \"DELETE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, transaction._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), this.state.editTransaction && /*#__PURE__*/_jsxDEV(EditForm, {\n        transaction: this.state.transaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/Transactions.jsx"],"names":["React","Component","Moment","EditForm","baseURL","Transactions","constructor","props","state","editTransaction","transaction","handleEdit","bind","event","fetch","target","id","then","data","json","err","console","log","parsedData","setState","render","transactions","map","transactionDate","transactionType","coin","quantity","$numberDecimal","perUnitPrice","exchange","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Moment from 'react-moment'\nimport EditForm from './EditForm'\n\nconst baseURL = 'http://localhost:3003'\n\nexport default class Transactions extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            editTransaction: false,\n            transaction: {}\n        }\n\n        this.handleEdit = this.handleEdit.bind(this)\n    }\n\n    handleEdit(event) {\n        fetch(`${baseURL}/transactions/${event.target.id}`)\n        .then(data => { return data.json()}, err => console.log(err))\n        .then(parsedData => this.setState({\n            editTransaction: !this.state.editTransaction,\n            transaction: parsedData\n        }), err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-5\">\n                <table className=\"table table-borderless\">\n                    <thead>\n                        <tr>\n                            <th>Transaction Date</th>\n                            <th>Transaction Type</th>\n                            <th>Coin</th>\n                            <th>Quantity</th>\n                            <th>Price per Unit</th>\n                            <th>Exchange</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.props.transactions.map(transaction => {\n                            return (\n                                <tr key={ transaction._id }>\n                                    <td>\n                                        <Moment format=\"MM/DD/YYYY\">\n                                        { transaction.transactionDate }\n                                        </Moment>\n                                    </td>\n                                    <td>{ transaction.transactionType }</td>\n                                    <td>{ transaction.coin }</td>\n                                    <td>{ transaction.quantity.$numberDecimal }</td>\n                                    <td>{ transaction.perUnitPrice.$numberDecimal }</td>\n                                    <td>{ transaction.exchange }</td>\n                                    <td><button onClick={ this.handleEdit } id={ transaction._id } className=\"btn btn-outline-secondary btn-sm\">EDIT</button></td>\n                                    <td><button id={ transaction._id } className=\"btn btn-outline-danger btn-sm\">DELETE</button></td>\n                                </tr>\n                            )\n                        }) }\n                    </tbody>\n                </table>\n                { this.state.editTransaction && <EditForm transaction={this.state.transaction} /> }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}