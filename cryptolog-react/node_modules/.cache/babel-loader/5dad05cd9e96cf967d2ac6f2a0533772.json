{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/CreateUser.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3003';\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      password: '',\n      passwordCheck: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // *** FUNCTIONS *** \n\n\n  handleChange(event) {\n    this.setState({\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(baseURL + '/users', {\n      method: 'POST',\n      body: JSON.stringify({\n        userName: this.state.userName,\n        userPassword: this.state.password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()); // .then(resJson => {\n    // this.props.handleAddTransaction(resJson)\n    // // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n    // Array.from(document.querySelectorAll(\"input\")).forEach(\n    //     input => (input.value = \"\")\n    //   );\n    // this.setState({\n    //     userName: '',\n    //     password: '',\n    // })\n    // })\n    // .catch(error => console.log({ 'Error': error }))\n    // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n    this.setState({\n      userName: '',\n      password: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CREATE A NEW USER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            className: \"form-label\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"email\",\n            className: \"form-control\",\n            name: \"userName\",\n            id: \"userName\",\n            placeholder: \"george.costanza@hotmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"bosco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"passwordCheck\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"password\",\n            className: \"form-control\",\n            name: \"passwordCheck\",\n            id: \"passwordCheck\",\n            placeholder: \"bosco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            value: \"Create New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateUser;","map":{"version":3,"sources":["/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/CreateUser.jsx"],"names":["Component","baseURL","CreateUser","constructor","props","state","userName","password","passwordCheck","handleChange","bind","handleSubmit","event","setState","currentTarget","id","value","preventDefault","fetch","method","body","JSON","stringify","userPassword","headers","then","res","json","Array","from","document","querySelectorAll","forEach","input","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nconst baseURL = 'http://localhost:3003'\n\n\nclass CreateUser extends Component{\n    constructor(props){\n        super(props)\n            this.state = {\n                userName: '',\n                password: '',\n                passwordCheck: '',\n            }\n            this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    // *** FUNCTIONS *** \n    handleChange(event){\n        this.setState({ [event.currentTarget.id] : event.currentTarget.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        fetch(baseURL + '/users', {\n            method: 'POST',\n            body: JSON.stringify({\n                userName: this.state.userName,\n                userPassword: this.state.password,\n            }),\n            headers: {\n            'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            // .then(resJson => {\n            // this.props.handleAddTransaction(resJson)\n            // // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n            // Array.from(document.querySelectorAll(\"input\")).forEach(\n            //     input => (input.value = \"\")\n            //   );\n            // this.setState({\n            //     userName: '',\n            //     password: '',\n                \n            // })\n            // })\n            // .catch(error => console.log({ 'Error': error }))\n            // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n            Array.from(document.querySelectorAll(\"input\")).forEach(\n                input => (input.value = \"\")\n              );\n            this.setState({\n                userName: '',\n                password: '',\n            })\n        }\n\n\n\n    render(){\n        return(\n            <div className=\"mt-4\">\n                <h2>CREATE A NEW USER</h2>\n                <form onSubmit={ this.handleSubmit }>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"userName\" className=\"form-label\">User Name</label>\n                        <input onChange={this.handleChange} type=\"email\" className=\"form-control\" name=\"userName\" id=\"userName\" placeholder=\"george.costanza@hotmail.com\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                        <input onChange={this.handleChange} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"bosco\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"passwordCheck\" className=\"form-label\">Password</label>\n                        <input onChange={this.handleChange} type=\"password\" className=\"form-control\" name=\"passwordCheck\" id=\"passwordCheck\" placeholder=\"bosco\" />\n                    </div>\n                    <div className=\"d-grid gap-2\">\n                        <input className=\"btn btn-primary\" type='submit' value='Create New User' />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CreateUser"]},"metadata":{},"sourceType":"module"}