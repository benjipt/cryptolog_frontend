{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/NewForm.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3003';\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coin: '',\n      quantity: '',\n      perUnitPrice: '',\n      exchange: '',\n      transactionDate: '',\n      transactionType: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.currentTarget);\n    fetch(baseURL + '/transactions', {\n      method: 'POST',\n      body: JSON.stringify({\n        coin: this.state.coin,\n        quantity: this.state.quantity,\n        perUnitPrice: this.state.perUnitPrice,\n        exchange: this.state.exchange,\n        transactionDate: this.state.transactionDate,\n        transactionType: this.state.transactionType,\n        createdBy: 'test'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(resJson => {\n      this.props.handleAddTransaction(resJson); // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n\n      Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n      this.setState({\n        coin: '',\n        quantity: '',\n        perUnitPrice: '',\n        exchange: '',\n        transactionDate: '',\n        transactionType: ''\n      });\n    }).catch(error => console.log({\n      'Error': error\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"coin\",\n            className: \"form-label\",\n            children: \"Coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"text\",\n            className: \"form-control\",\n            name: \"coin\",\n            id: \"coin\",\n            placeholder: \"BTC, ETH...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"quantity\",\n            className: \"form-label\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"number\",\n            step: \"any\",\n            className: \"form-control\",\n            name: \"quantity\",\n            id: \"quantity\",\n            placeholder: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"perUnitPrice\",\n            className: \"form-label\",\n            children: \"Price per Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"number\",\n            step: \"0.01\",\n            className: \"form-control\",\n            name: \"perUnitPrice\",\n            id: \"perUnitPrice\",\n            placeholder: \"25.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exchange\",\n            className: \"form-label\",\n            children: \"Exchange Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"text\",\n            className: \"form-control\",\n            name: \"exchange\",\n            id: \"exchange\",\n            placeholder: \"Coinbase, Gemini, Kraken, Binance, etc...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"transactionDate\",\n            className: \"form-label\",\n            children: \"Transaction Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"date\",\n            className: \"form-control\",\n            name: \"transactionDate\",\n            id: \"transactionDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"me-2\",\n            htmlFor: \"transactionType\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"me-2\",\n            onChange: this.handleChange,\n            type: \"radio\",\n            name: \"transactionType\",\n            id: \"transactionType\",\n            value: \"buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"me-2\",\n            htmlFor: \"transactionType\",\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"radio\",\n            name: \"transactionType\",\n            id: \"transactionType\",\n            value: \"sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-lg btn-success\",\n          value: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/benjaminwilde/Desktop/personal-site/cryptolog_frontend/cryptolog-react/src/components/NewForm.jsx"],"names":["React","Component","baseURL","NewForm","constructor","props","state","coin","quantity","perUnitPrice","exchange","transactionDate","transactionType","handleChange","bind","handleSubmit","event","setState","currentTarget","id","value","preventDefault","console","log","fetch","method","body","JSON","stringify","createdBy","headers","then","res","json","resJson","handleAddTransaction","Array","from","document","querySelectorAll","forEach","input","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nconst baseURL = 'http://localhost:3003'\n\nexport default class NewForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            coin: '',\n            quantity: '',\n            perUnitPrice: '',\n            exchange: '',\n            transactionDate: '',\n            transactionType: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.currentTarget.id]: event.currentTarget.value })\n      }\n\n    handleSubmit(event) {\n    event.preventDefault()\n    console.log(event.currentTarget)\n    fetch(baseURL + '/transactions', {\n        method: 'POST',\n        body: JSON.stringify({\n            coin: this.state.coin,\n            quantity: this.state.quantity,\n            perUnitPrice: this.state.perUnitPrice,\n            exchange: this.state.exchange,\n            transactionDate: this.state.transactionDate,\n            transactionType: this.state.transactionType,\n            createdBy: 'test',\n        }),\n        headers: {\n        'Content-Type': 'application/json'\n        }\n    }).then(res => res.json())\n        .then(resJson => {\n        this.props.handleAddTransaction(resJson)\n        // Reset Form fields: https://www.freecodecamp.org/news/how-to-clear-input-values-of-dynamic-form-in-react/\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n        this.setState({\n            coin: '',\n            quantity: '',\n            perUnitPrice: '',\n            exchange: '',\n            transactionDate: '',\n            transactionType: '',\n        })\n        })\n        .catch(error => console.log({ 'Error': error }))\n    }\n\n    render() {\n        return (\n            <div className=\"mt-3\">\n                <form onSubmit={ this.handleSubmit }>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"coin\" className=\"form-label\">Coin</label>\n                        <input onChange={ this.handleChange } type=\"text\" className=\"form-control\" name=\"coin\" id=\"coin\" placeholder=\"BTC, ETH...\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n                        <input onChange={ this.handleChange } type=\"number\" step=\"any\" className=\"form-control\" name=\"quantity\" id=\"quantity\" placeholder=\"0.1\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"perUnitPrice\" className=\"form-label\">Price per Unit</label>\n                        <input onChange={ this.handleChange } type=\"number\" step=\"0.01\" className=\"form-control\" name=\"perUnitPrice\" id=\"perUnitPrice\" placeholder=\"25.00\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exchange\" className=\"form-label\">Exchange Name</label>\n                        <input onChange={ this.handleChange } type=\"text\" className=\"form-control\" name=\"exchange\" id=\"exchange\" placeholder=\"Coinbase, Gemini, Kraken, Binance, etc...\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"transactionDate\" className=\"form-label\">Transaction Date</label>\n                        <input onChange={ this.handleChange } type=\"date\" className=\"form-control\" name=\"transactionDate\" id=\"transactionDate\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label className=\"me-2\" htmlFor=\"transactionType\">Buy</label>\n                        <input className=\"me-2\" onChange={ this.handleChange } type=\"radio\" name=\"transactionType\" id=\"transactionType\" value=\"buy\" />\n                        <label className=\"me-2\" htmlFor=\"transactionType\">Sell</label>\n                        <input onChange={ this.handleChange } type=\"radio\" name=\"transactionType\" id=\"transactionType\" value=\"sell\" />\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-lg btn-success\" value=\"Add Transaction\" />\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}